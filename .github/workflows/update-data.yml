name: Update PoE2 Data

on:
  schedule:
    # Run daily at 6 AM UTC
    - cron: "0 6 * * *"
  workflow_dispatch: # Allow manual triggering

jobs:
  update-data:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.5.0

      - name: Install dependencies
        run: pnpm install

      - name: Check current data state
        id: before
        run: |
          echo "timestamp=$(date +%s)" >> $GITHUB_OUTPUT
          echo "config_hash=$(sha256sum data/config.json | cut -d' ' -f1)" >> $GITHUB_OUTPUT
          echo "tables_hash=$(find data/tables -type f -name "*.json" -exec sha256sum {} \; | sort | sha256sum | cut -d' ' -f1)" >> $GITHUB_OUTPUT

      - name: Update PoE2 data
        run: pnpm run update-data

      - name: Check for changes
        id: after
        run: |
          echo "timestamp=$(date +%s)" >> $GITHUB_OUTPUT
          echo "config_hash=$(sha256sum data/config.json | cut -d' ' -f1)" >> $GITHUB_OUTPUT
          echo "tables_hash=$(find data/tables -type f -name "*.json" -exec sha256sum {} \; | sort | sha256sum | cut -d' ' -f1)" >> $GITHUB_OUTPUT

      - name: Check if changes were made
        id: changes
        run: |
          if [ "${{ steps.before.outputs.config_hash }}" != "${{ steps.after.outputs.config_hash }}" ] || [ "${{ steps.before.outputs.tables_hash }}" != "${{ steps.after.outputs.tables_hash }}" ]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected in PoE2 data"
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected"
          fi

      - name: Get PoE2 version
        id: version
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          VERSION=$(node -e "console.log(require('./data/config.json').patch)")
          echo "poe2_version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        if: steps.changes.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "feat: update PoE2 data to version ${{ steps.version.outputs.poe2_version }}"
          title: "feat: update PoE2 data to version ${{ steps.version.outputs.poe2_version }}"
          body: |
            ## ðŸ“‹ Summary

            This PR updates the PoE2 game data to version **${{ steps.version.outputs.poe2_version }}**.

            ### ðŸ”„ Changes Made

            - Updated `data/config.json` with new patch version
            - Updated game data tables in `data/tables/`

            ### ðŸ¤– Automated Update

            This PR was automatically generated by the GitHub Action workflow.

            ---

            **Note**: This is an automated update. Please review the changes before merging.
          branch: update-poe2-data-${{ steps.version.outputs.poe2_version }}
          delete-branch: true
          labels: |
            automated
            data-update
            poe2
